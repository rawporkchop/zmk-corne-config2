/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
  };

/ {
    combos {
        compatible = "zmk,combos";

        COMBO(btClear, &bt BT_CLR, 24 35)

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <24 35>;
        };
    };

    // |  0   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  10 | 11   |
    // | 12   |  13 |  14 |  15 |  16 |  17 |   |  18 |  19  |  20 |  21 |  22 |  23  |
    // | 24   |  25 |  26 |  2 7|  28 |  29 |   |  30 |  31  |  32 |  33 |  34 | 35   |
    //                    | 36  | 37  | 38  |   | 39  | 40   | 41  |

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            // -----------------------------------------------------------------------------------------
            // |  ESC |  '  |  ,  |  .  |  P  |  Y  |   |  F  |  G   |  C  |  R  |  L  | BKSP |
            // |  CTRL|  A  |  O  |  E  |  U  |  I  |   |  D  |  H   |  T  |  N  |  S  |  TAB |
            // |  SHFT|  ;  |  Q  |  J  |  K  |  X  |   |  B  |  M   |  W  |  V  |  Z  |      |
            //                    |ALT  | LWR | SPC |   | RET | RSE  | GUI |

            bindings = <
&kp TAB     &kp SQT   &kp COMMA  &kp DOT   &kp P  &kp Y        &kp F    &kp G  &kp C     &kp R  &kp L  &kp BSPC
&kp LCTRL   &kp A     &kp O      &kp E     &kp U  &kp I        &kp D    &kp H  &kp T     &kp N  &kp S  &kp FSLH
&kp LSHIFT  &kp SEMI  &kp Q      &kp J     &kp K  &kp X        &kp B    &kp M  &kp W     &kp V  &kp Z  &to 1
                                 &kp RALT  &mo 2  &kp SPACE    &kp RET  &mo 3  &kp LGUI
            >;
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&trans  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &to 4
                      &kp RALT  &mo 2  &kp SPACE    &kp RET  &mo 3  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7    |  8  |  9  |  0  |      |
            // |      |     |     | CTRL| Dbak|     |   |  LFT|  DWN  |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |       |     |     |     |      |
            //                    |     |     |     |   |     |       |     |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp N7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &kp ESC       &trans        &trans        &kp DEL       &trans          &trans        &trans  &trans        &trans        &trans        &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans        &trans  &trans        &trans        &mo 5         &trans
                                    &kp RALT      &trans        &kp SPACE       &kp RET       &trans  &kp LGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |a     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
            // |      |     | FSLH| BSLH| TIL | GRA |   |  -  |  =  |  [  |  ]  | QUES|      |
            // |      |  BT1| BT2 | BT3 | BT4 | BT5 |   |  _  |  +  |  {  |  }  | "|" |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTERISK  &kp LPAR  &kp RIGHT              &kp QUESTION
&trans  &trans           &kp FSLH     &kp BSLH   &kp TILDE   &kp GRAVE    &kp MINUS  &kp LEFT  &kp LBKT      &kp RBKT  &kp RIGHT_PARENTHESIS  &kp EQUAL
&trans  &trans           &trans       &trans     &kp DOWN    &kp UP       &kp UNDER  &kp PLUS  &kp LBRC      &kp RBRC  &kp PIPE               &trans
                                      &kp RALT   &trans      &kp SPACE    &kp RET    &trans    &kp LGUI
            >;
        };

        numNmacro {
            bindings = <
&kp F12           &kp F13     &kp KP_MULTIPLY  &kp N7     &kp N8    &kp N9    &none  &none  &none  &none  &none  &none
&kp F15           &kp F16     &kp KP_DIVIDE    &kp N4     &kp N5    &kp N6    &none  &none  &none  &none  &none  &none
&kp C_PLAY_PAUSE  &kp C_NEXT  &kp DOT          &kp N1     &kp N2    &kp N3    &none  &none  &none  &none  &none  &to 0
                                               &kp MINUS  &kp PLUS  &kp N0    &none  &mo 3  &none
            >;
        };

        function {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans   &trans   &trans
                          &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };
    };
};
